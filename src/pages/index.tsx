import { type NextPage } from "next";
import Head from "next/head";

import { LOCATIONS } from "./constants";

import {
  Chart as ChartJS,
  CategoryScale,
  LinearScale,
  PointElement,
  LineElement,
  Title,
  TimeScale,
  Tooltip,
  Legend,
  Colors,
  Filler,
  type ChartOptions,
} from "chart.js";

import dayjs from "dayjs";
// Adapter to be able to display time series x-axis
import "chartjs-adapter-dayjs-4/dist/chartjs-adapter-dayjs-4.esm";

import { Line } from "react-chartjs-2";
import { faker } from "@faker-js/faker";
import { useEffect, useState } from "react";
import Header from "~/components/Header";
import Sidebar from "~/components/Sidebar";
import { api } from "~/utils/api";

ChartJS.register(
  CategoryScale,
  LinearScale,
  PointElement,
  LineElement,
  Title,
  Tooltip,
  TimeScale,
  Legend,
  Colors,
  Filler
);

const Home: NextPage = () => {
  // Set the index of the location
  const [index, setIndex] = useState(0);

  const options: ChartOptions = {
    responsive: true,
    maintainAspectRatio: false,
    plugins: {
      legend: {
        position: "top",
      },
      title: {
        display: true,
        text: "Historical Crowd Data",
      },
      tooltip: {
        enabled: true,
        mode: "index",
        intersect: false,
      },
    },
    scales: {
      x: {
        type: "time",
        time: {
          unit: "hour",
        },
      },
      y: {
        max: LOCATIONS[index]?.capacity ?? 250,
      },
    },
  };

  const crowdData = LOCATIONS.map((_, i) => {
    return api.crowd.crowdLevel
      .useQuery(LOCATIONS[i]?.id ?? 0)
      .data?.map((item) => {
        return {
          y: item.crowd_level,
          x: dayjs(item.timestamp).toDate(),
        };
      });
  });

  // Construct the data for the line graph
  const datasets = [
    {
      label: LOCATIONS[index]?.name ?? "Location not found",
      data: crowdData[index] ?? [],
      fill: "origin",
      tension: 0.4,
      pointStyle: "circle",
      backgroundColor: "rgba(23, 37, 84, 0.3)",
      borderColor: "rgba(23, 37, 84, 0.5)",
    },
    // {
    //   label: (LOCATIONS[index] as string) + " (Last Week)",
    //   // data: crowdData,
    //   fill: "origin",
    //   tension: 0.4,
    //   backgroundColor: "rgba(134, 118, 255, 0.1)",
    //   borderColor: "rgba(0, 0, 0, 0)",
    //   pointStyle: "none",
    // },
  ];

  const data = {
    datasets,
  };

  return (
    <>
      <Head>
        <title>NUS Gym</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen w-screen">
        <Sidebar
          index={index}
          setIndex={setIndex}
          currentCrowd={crowdData.map((e) => e?.[e.length - 1]?.y ?? 0)}
        />
        <div className="relative flex h-screen w-full flex-col items-center">
          <Header />
          <div className="mt-4 h-2/5 w-full lg:h-4/5 lg:w-4/5">
            <div>Crowd at UTown Pool</div>
            <Line
              options={options}
              data={data}
              // className="my-4 bg-gradient-to-b from-[#9bf8f4] to-[#6f7bf7]"
            />
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
